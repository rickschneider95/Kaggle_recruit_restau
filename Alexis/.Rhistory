ggplot(aes(reorder(hpg_area_name, total, FUN = min), total, fill = hpg_area_name)) +
geom_col() +
coord_flip() +
labs(title = "Top 20 areas w/ most restaurants", x = "Areas", y = "Number of restaurants")
leaflet(hpg) %>%
addTiles() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~longitude, ~latitude,
popup = ~hpg_store_id, label = ~hpg_genre_name,
clusterOptions = markerClusterOptions())
levels(as.factor(hpg$hpg_area_name`))
levels(as.factor(hpg$hpg_area_name))
levels(as.factor(hpg$hpg_area_name))
f
read(x)
summary(hpg)
fezsdqvc,op
top_n(20,total)
summary(aggr(hpg, sortVar=TRUE))$combinations
qsd@   2 +2
é
levels(as.factor(hpg$hpg_area_name))
sum(levels(as.factor(hpg$hpg_area_name)))
hpg %>% distinct(hpg_area_name)
hpg %>% distinct(hpg_area_name) %>%
count()
hpg %>% distinct(hpg_area_name) %>% group_by(hpg_area_name) %>%
count()
levels(as.factor(hpg$hpg_area_name))
hpg %>% mutate(hpg_area_name = substr(hpg_area_name, 0, 8))
hpg %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
levels(as.factor(hpg$hpg_area_name))
hpg %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
levels(hpg_area_name)
hpg %>%
mutate(hpg_area_name = as.factor(substr(hpg_area_name, 0, 8))) %>%
levels(hpg_area_name)
hpg %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
group_by(hpg_area_name) %>%
count()
hpg %>%
mutate(hpg_area_name = str_sub(hpg_area_name, 1, 20)) %>%
group_by(hpg_area_name) %>%
summarise(total = n()) %>%
ungroup() %>%
top_n(20,total) %>%
ggplot(aes(reorder(hpg_area_name, total, FUN = min), total, fill = hpg_area_name)) +
geom_col() +
coord_flip() +
labs(title = "Top 20 areas w/ most restaurants", x = "Areas", y = "Number of restaurants")
hpg %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
group_by(total = hpg_area_name) %>%
count() %>%
ggplot(aes(reorder(hpg_area_name, total, FUN = min), total, fill = hpg_area_name)) +
geom_col() +
coord_flip() +
labs(title = "Most influential areas", x = "Areas", y = "Number of restaurants")
hpg %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
group_by(hpg_area_name) %>%
summarise(total = sum(hpg_area_name)) %>%
ggplot(aes(reorder(hpg_area_name, total, FUN = min), total, fill = hpg_area_name)) +
geom_col() +
coord_flip() +
labs(title = "Most influential areas", x = "Areas", y = "Number of restaurants")
summarise(total = sum(as.factor(hpg_area_name)) %>%
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(naniar)
library(VIM)
library('geosphere') # geospatial locations
library('leaflet') # maps
library('leaflet.extras') # maps
library('maps') # maps
hpg_store <- read_csv("data/hpg_store_info.csv")
hpg_store
levels(as.factor(hpg_store$hpg_genre_name))
hpg_reserve <- read.csv("data/hpg_reserve.csv")
hpg_reserve %>%
select(hpg_store_id,reserve_visitors) # I'm only intersted in these two, so it will be easier to work with a smaller data set.
hpg_reserve <- hpg_reserve %>%
group_by(hpg_store_id) %>%
summarise(total = n())
hpg <- left_join(hpg_reserve,hpg_store, by = "hpg_store_id")
hpg <- hpg %>% filter(hpg_genre_name != "NA")
sum(is.na(hpg)) # Just to check...
visitors_per_style <- hpg %>%
group_by(hpg_genre_name) %>%
summarise(total = n()) %>%
arrange(total)
levels(as.factor(hpg$hpg_genre_name))
visitors_per_style %>%
ggplot() +
aes(x = reorder(hpg_genre_name, total, FUN = min), y = total, fill = hpg_genre_name) +
geom_col() +
coord_flip() +
theme(title=element_blank(),
axis.title.y=element_blank(),
legend.position = "none")
hpg %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
group_by(hpg_area_name) %>%
summarise(total = sum(as.factor(hpg_area_name))) %>%
ggplot(aes(reorder(hpg_area_name, total, FUN = min), total, fill = hpg_area_name)) +
geom_col() +
coord_flip() +
labs(title = "Most influential areas", x = "Areas", y = "Number of restaurants")
hpg %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
f
hpg %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
group_by(hpg_area_name)
hpg %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
group_by(hpg_area_name) %>%
summarise(total = n())
hpg %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 6)) %>%
group_by(hpg_area_name) %>%
summarise(total = n())
levels(as.factor(hpg$hpg_area_name))
hpg %>%
mutate(case_when(hpg_area_name == "Osaka Prefecture Osaka None" ~ "Ōsaka Prefecture Osaka None",
TRUE ~ hpg_area_name))
hpg %>%
mutate(case_when(hpg_area_name == "Osaka Prefecture Osaka None" ~ "Ōsaka Prefecture Osaka None",
TRUE ~ hpg_area_name)) %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8))
hpg %>%
mutate(case_when(hpg_area_name == "Osaka Prefecture Osaka None" ~ "Ōsaka Prefecture Osaka None",
TRUE ~ hpg_area_name)) %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
group_by(hpg_area_name)
hpg %>%
mutate(case_when(hpg_area_name == "Osaka Prefecture Osaka None" ~ "Ōsaka Prefecture Osaka None",
TRUE ~ hpg_area_name)) %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
group_by(hpg_area_name) %>%
summarise(total = n())
levels(as.factor(hpg$hpg_area_name))
hpg %>%
mutate(case_when(hpg_area_name == "Osaka Prefecture Osaka None" ~ "Ōsaka-fu Prefecture Osaka None",
TRUE ~ hpg_area_name)) %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
group_by(hpg_area_name) %>%
summarise(total = n())
hpg %>%
mutate(case_when(hpg_area_name == "Osaka Prefecture Osaka None" ~ "Ōsaka-fu Prefecture Osaka None",
TRUE ~ hpg_area_name))
hpg %>%
mutate(case_when(hpg_area_name == "Osaka Prefecture Osaka None" ~ "Ōsaka-fu Prefecture Osaka None",
TRUE ~ hpg_area_name)) %>% View()
hpg %>%
mutate(hpg_area_name = case_when(hpg_area_name == "Osaka Prefecture Osaka None" ~ "Ōsaka-fu Prefecture Osaka None",
TRUE ~ hpg_area_name)) %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
group_by(hpg_area_name) %>%
summarise(total = n())
hpg %>%
mutate(hpg_area_name = case_when(hpg_area_name == "Osaka Prefecture Osaka None" ~ "Ōsaka-fu Prefecture Osaka None",
TRUE ~ hpg_area_name)) %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
group_by(hpg_area_name) %>%
summarise(total = n()) %>%
ggplot(aes(reorder(hpg_area_name, total, FUN = min), total, fill = hpg_area_name)) +
geom_col() +
coord_flip() +
labs(title = "Most influential areas", x = "Areas", y = "Number of restaurants")
levels(as.factor(hpg$hpg_area_name))
hpg %>%
mutate(hpg_area_name = case_when(hpg_area_name == "Osaka Prefecture Osaka None" ~ "Ōsaka-fu Prefecture Osaka None",
TRUE ~ hpg_area_name)) %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
group_by(hpg_area_name) %>%
summarise(total = n()) %>%
ggplot(aes(reorder(hpg_area_name, total, FUN = min), total, fill = hpg_area_name)) +
geom_col() +
coord_flip() +
labs(title = "Most influential areas", x = "Areas", y = "Number of restaurants")
leaflet(hpg) %>%
addTiles() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~longitude, ~latitude,
popup = ~hpg_store_id, label = ~hpg_genre_name,
clusterOptions = markerClusterOptions())
hpg %>%
mutate(hpg_area_name = str_sub(air_area_name, 1, 12)) %>%
ggplot(aes(hpg_genre_name, air_genre_name)) +
geom_count(colour = "blue")
hpg %>%
mutate(hpg_area_name = str_sub(hpg_area_name, 1, 12)) %>%
ggplot(aes(hpg_genre_name, hpg_genre_name)) +
geom_count(colour = "blue")
hpg %>%
mutate(hpg_area_name = str_sub(hpg_area_name, 1, 8)) %>%
ggplot(aes(hpg_genre_name, hpg_genre_name)) +
geom_count(colour = "blue")
hpg %>%
mutate(hpg_area_name = str_sub(hpg_area_name, 1, 8)) %>%
ggplot(aes(hpg_genre_name, hpg_genre_name)) +
geom_count(colour = "blue") +
theme(legend.position = "bottom", axis.text.x  = element_text(angle=45, hjust=1, vjust=0.9))
hpg %>%
mutate(hpg_area_name = str_sub(hpg_area_name, 1, 8)) %>%
ggplot(aes(hpg_area_name, hpg_genre_name)) +
geom_count(colour = "blue") +
theme(legend.position = "bottom", axis.text.x  = element_text(angle=45, hjust=1, vjust=0.9))
hpg %>%
mutate(hpg_area_name = str_sub(hpg_area_name, 1, 8)) %>%
ggplot(aes(hpg_area_name, hpg_genre_name)) +
geom_count(colour = "blue") +
theme(legend.position = "bottom", axis.text.x  = element_text(angle=45, hjust=1, vjust=0.9)) +
labs(y = "Genre", x = "Area", title = "Contingency table")
?geom_count()
vignette("ggplot2-specs")
hpg %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) %>%
ggplot(aes(reorder(air_genre_name, total, FUN = mean), total)) +
geom_boxplot() +
geom_jitter(color = "blue") +
# scale_y_log10() +
coord_flip() +
labs(x = "Genre", y = "Number of restaurants per area")
hpg %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) %>%
ggplot(aes(reorder(hpg_genre_name, total, FUN = mean), total)) +
geom_boxplot() +
geom_jitter(color = "blue") +
# scale_y_log10() +
coord_flip() +
labs(x = "Genre", y = "Number of restaurants per area")
hpg %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) %>%
ggplot(aes(reorder(hpg_genre_name, total, FUN = mean), total)) +
geom_boxplot() +
geom_jitter(color = "blue") +
scale_y_log10() +
coord_flip() +
labs(x = "Genre", y = "Number of restaurants per area")
hpg %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n())
hpg %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) %>%
ggplot(aes(reorder(hpg_genre_name, total, FUN = mean), total, fill = hpg_area_name)) +
geom_boxplot() +
geom_jitter(color = "blue") +
scale_y_log10() +
coord_flip() +
labs(x = "Genre", y = "Number of restaurants per area")
hpg %>%
mutate(hpg_area_name = str_sub(hpg_area_name, 0, 8)) %>%
ggplot(aes(hpg_area_name, hpg_genre_name)) +
geom_count(colour = "blue") +
theme(legend.position = "bottom", axis.text.x  = element_text(angle=45, hjust=1, vjust=0.9)) +
labs(y = "Genre", x = "Area", title = "Contingency table")
hpg %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) %>%
ggplot(aes(reorder(hpg_genre_name, total, FUN = mean), total, fill = hpg_area_name)) +
geom_boxplot() +
geom_jitter(color = "blue") +
scale_y_log10() +
coord_flip() +
labs(x = "Genre", y = "Number of restaurants per area")
hpg %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) %>%
ggplot(aes(reorder(hpg_genre_name, total, FUN = mean), total)) +
geom_boxplot(fill = hpg_area_name) +
geom_jitter(color = "blue") +
scale_y_log10() +
coord_flip() +
labs(x = "Genre", y = "Number of restaurants per area")
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) %>%
ggplot(aes(reorder(hpg_genre_name, total, FUN = mean), total)) +
geom_boxplot() +
geom_jitter(color = "blue") +
scale_y_log10() +
coord_flip() +
labs(x = "Genre", y = "Number of restaurants per area")
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) %>%
ggplot(aes(reorder(hpg_genre_name, total, FUN = mean), total)) +
geom_boxplot() +
geom_jitter(color = "blue") +
scale_y_log10() +
coord_flip() +
labs(x = "Genre", y = "Number of restaurants per area")
hpg %>%
mutate(hpg_area_name = substr(hpg_area_name, 0, 8)) %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) %>%
ggplot(aes(reorder(hpg_genre_name, total, FUN = mean), total)) +
geom_boxplot() +
geom_jitter(color = "blue") +
scale_y_log10() +
coord_flip() +
labs(x = "Genre", y = "Number of restaurants per area")
hpg %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) %>%
ggplot(aes(reorder(hpg_genre_name, n, FUN = mean), n)) +
geom_boxplot() +
geom_jitter(color = "red") +
scale_y_log10() +
coord_flip() +
labs(x = "hpg genre", y = "Cases per hpg area")
hpg %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n())
hpg %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) %>%
ggplot(aes(reorder(hpg_genre_name, n, FUN = mean), n)) +
geom_boxplot()
hpg %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) %>%
ggplot(aes(reorder(hpg_genre_name, total, FUN = mean), total)) +
geom_boxplot() +
geom_jitter(color = "red") +
scale_y_log10() +
coord_flip() +
labs(x = "hpg genre", y = "Cases per hpg area")
hpg %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) == 0
sum(hpg %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) == 0)
min(hpg %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()))
hpg %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) %>%
arrange(total) %>%
head()
leaflet(hpg) %>%
addTiles() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~longitude, ~latitude,
popup = ~hpg_store_id, label = ~hpg_genre_name,
clusterOptions = markerClusterOptions())
med_coord_hpg <- hpg %>%
summarise_at(vars(longitude:latitude), median)
med_coord_hpg
med_coord_hpg <- hpg_store %>%
summarise_at(vars(longitude:latitude), median)
med_coord_hpg
med_coord_hpg <- test %>%
summarise_at(vars(longitude:latitude), median)
test <- hpg_store %>%
mutate(hpg_genre_name = as.factor(hpg_genre_name),
hpg_area_name = as.factor(hpg_area_name))
med_coord_hpg <- test %>%
summarise_at(vars(longitude:latitude), median)
med_coord_hpg
med_coord_hpg <- hpg %>%
summarise_at(vars(longitude:latitude), median)
med_coord_hpg
hpg_coords <- hpg %>%
select(longitude, latitude)
hpg_coords
hpg_store$dist <- istCosine(hpg_coords, med_coord_hpg)/1e3
hpg_store$dist <- distCosine(hpg_coords, med_coord_hpg)/1e3
hpg_store <- read.csv("data/hpg_store_info.csv")
test$dist <- distCosine(hpg_coords, med_coord_hpg)/1e3
test
test <- test %>%
mutate(dist_group = as.integer(case_when(
dist < 80 ~ 1,
dist < 300 ~ 2,
dist < 500 ~ 3,
dist < 750 ~ 4,
TRUE ~ 5))) %>%
left_join(hpg_count, by = "hpg_area_name") %>%
separate(hpg_area_name, c("prefecture"), sep = " ", remove = FALSE)
test_count <- hpg_store %>%
group_by(hpg_area_name) %>%
summarise(hpg_count = n())
test <- test %>%
mutate(dist_group = as.integer(case_when(
dist < 80 ~ 1,
dist < 300 ~ 2,
dist < 500 ~ 3,
dist < 750 ~ 4,
TRUE ~ 5))) %>%
left_join(hpg_count, by = "hpg_area_name") %>%
separate(hpg_area_name, c("prefecture"), sep = " ", remove = FALSE) # Seperating areas in function of their distance to "center"
dist < 80 ~ 1,
dist < 80 ~ 1,
test
test <- test %>%
mutate(dist_group = as.integer(case_when(
dist < 80 ~ 1,
dist < 300 ~ 2,
dist < 500 ~ 3,
dist < 750 ~ 4,
TRUE ~ 5))) %>%
left_join(test_count, by = "hpg_area_name") %>%
separate(hpg_area_name, c("prefecture"), sep = " ", remove = FALSE)
test
p2 <- test %>%
ggplot(aes(dist)) +
geom_histogram(bins = 30, fill = "red") +
geom_vline(xintercept = c(80, 300, 500, 750)) +
labs(x = "Linear distance [km]")
dist < 80 ~ 1,
test <- test %>%
mutate(dist_group = as.integer(case_when(dist < 80 ~ 1, dist < 300 ~ 2, dist < 500 ~ 3, dist < 750 ~ 4, TRUE ~ 5))) %>%
left_join(test_count, by = "hpg_area_name") %>%
separate(hpg_area_name, c("prefecture"), sep = " ", remove = FALSE) # Seperating areas in function of their distance to "center"
# test <- hpg_store %>%
#   mutate(hpg_genre_name = as.factor(hpg_genre_name),
#          hpg_area_name = as.factor(hpg_area_name))
test <- hpg_store
med_coord_hpg <- hpg %>%
summarise_at(vars(longitude:latitude), median) # calculating median distance of all areas. (sort of center of japan)
hpg_coords <- hpg %>%
select(longitude, latitude) # just selecting coordinates
test$dist <- distCosine(hpg_coords, med_coord_hpg)/1e3 # creating a new column with distance btw each area and "center" of japan
test_count <- hpg_store %>%
group_by(hpg_area_name) %>%
summarise(hpg_count = n())
test <- test %>%
mutate(dist_group = as.integer(case_when(dist < 80 ~ 1, dist < 300 ~ 2, dist < 500 ~ 3, dist < 750 ~ 4, TRUE ~ 5))) %>%
left_join(test_count, by = "hpg_area_name") %>%
separate(hpg_area_name, c("prefecture"), sep = " ", remove = FALSE) # Seperating areas in function of their distance to "center"
p2 <- test %>%
ggplot(aes(dist)) +
geom_histogram(bins = 30, fill = "red") +
geom_vline(xintercept = c(80, 300, 500, 750)) +
labs(x = "Linear distance [km]")
p2
bar <- test %>%
select(latitude, longitude, dist_group) %>%
mutate(dset = "hpg")
leaflet(bar) %>%
addTiles() %>%
addProviderTiles("CartoDB.Positron") %>%
addScaleBar() %>%
addCircleMarkers(lng = bar$longitude, lat = bar$latitude, group = "HPG",
color = "red", fillOpacity = 0.5, radius = 3*bar$dist_group) %>%
addCircleMarkers(lng = med_coord_air$longitude, lat = med_coord_air$latitude, group = "Centre",
color = "darkgreen", fillOpacity = 1) %>%
addLayersControl(
overlayGroups = c("HPG", "Centre"),
options = layersControlOptions(collapsed = FALSE)
)
med_coord_hpg
leaflet(bar) %>%
addTiles() %>%
addProviderTiles("CartoDB.Positron") %>%
addScaleBar() %>%
addCircleMarkers(lng = bar$longitude, lat = bar$latitude, group = "HPG",
color = "red", fillOpacity = 0.5, radius = 3*bar$dist_group) %>%
addCircleMarkers(lng = med_coord_hpg$longitude, lat = med_coord_hpg$latitude, group = "Centre",
color = "darkgreen", fillOpacity = 1) %>%
addLayersControl(
overlayGroups = c("HPG", "Centre"),
options = layersControlOptions(collapsed = FALSE)
)
hpg_store %>%
ggplot(aes(prefecture)) +
geom_bar(fill = "red") +
coord_flip() +
ggtitle("hpg prefectures - # restaurants") +
labs(x = "")
test %>%
ggplot(aes(dist)) +
geom_histogram(bins = 30, fill = "red") +
geom_vline(xintercept = c(80, 300, 500, 750)) +
labs(x = "Linear distance [km]")
leaflet(bar) %>%
addTiles() %>%
addProviderTiles("CartoDB.Positron") %>%
addScaleBar() %>%
addCircleMarkers(lng = bar$longitude, lat = bar$latitude, group = "HPG",
color = "red", fillOpacity = 0.5, radius = 3*bar$dist_group) %>%
addCircleMarkers(lng = med_coord_hpg$longitude, lat = med_coord_hpg$latitude, group = "Centre",
color = "darkgreen", fillOpacity = 1) %>%
addLayersControl(
overlayGroups = c("HPG", "Centre"),
options = layersControlOptions(collapsed = FALSE)
)
leaflet(bar) %>%
addTiles() %>%
addProviderTiles("CartoDB.Positron") %>%
addScaleBar() %>%
addCircleMarkers(lng = bar$longitude, lat = bar$latitude, group = "HPG",
color = "red", fillOpacity = 0.5, radius = 3*bar$dist_group) %>%
addCircleMarkers(lng = med_coord_hpg$longitude, lat = med_coord_hpg$latitude, group = "Centre",
color = "darkgreen", fillOpacity = 1) %>%
addLayersControl(
overlayGroups = c("HPG", "Centre"),
options = layersControlOptions(collapsed = FALSE)
)
