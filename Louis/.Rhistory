addTiles() %>%  # Add default OpenStreetMap map tiles
addAwesomeMarkers(lng=air_store$longitude,lat=air_store$latitude,popup=air_store$air_genre_name,clusterOptions=markerClusterOptions(),icon=icons)
air_store %>%
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addAwesomeMarkers(lng=air_store$longitude,lat=air_store$latitude,popup=air_store$air_genre_name,clusterOptions=markerClusterOptions(),icon=icons)
names(air_store)
#get different marker for different rest types?
sapply(air_store$air_genre_name)
#get different marker for different rest types?
sapply(air_store,class)
getColor <- function(rest) {
sapply(rest$air_genre_name, function(air_genre_name) {
if(air_genre_name == "Italian/French") {
"green"
} else if(air_genre_name == "Other") {
"orange"
} else if(air_genre_name == "Yakiniku/Korean food"){
"blue"
} else if(air_genre_name == "Bar/Cocktail"){
"white"
}
})
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(air_store)
)
air_store %>%
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addAwesomeMarkers(lng=air_store$longitude,lat=air_store$latitude,popup=air_store$air_genre_name,clusterOptions=markerClusterOptions(),icon=icons)
#by genre, by area plot
ggplot(air_store) +
geom_boxplot()+
coord_flip()
library(ggplot2)
#by genre, by area plot
ggplot(air_store) +
geom_boxplot()+
coord_flip()
names(air_store)
#by genre, by area plot
ggplot(air_store,aes(y=air_genre_name)) +
geom_boxplot()+
coord_flip()
#by genre, by area plot
ggplot(air_store,aes(y=air_genre_name)) +
geom_barplot()+
coord_flip()
#by genre, by area plot
ggplot(air_store,aes(y=air_genre_name)) +
geom_bar()+
coord_flip()
#by genre, by area plot
ggplot(air_store,aes(x=air_genre_name)) +
geom_bar()+
coord_flip()
names(air_store)
for(i in 1:14){
loc <- air_store$air_genre_name
ggplot(air_store::select(loc[i]),aes(x=air_genre_name)) +
geom_bar()+
coord_flip()
}
for(i in 1:14){
loc <- air_store$air_genre_name
ggplot(air_store%>%select(loc[i]),aes(x=air_genre_name)) +
geom_bar()+
coord_flip()
}
for(i in 1:14){
loc <- air_store$air_genre_name
ggplot(air_store%>%dplyr::select(loc[i]),aes(x=air_genre_name)) +
geom_bar()+
coord_flip()
}
air_store%>%dplyr::select(loc[i])
for(i in 1:14){
loc <- air_store$air_genre_name
air_store%>%dplyr::select(loc[i])
}
loc <- air_store$air_genre_name
for(i in 1:14){
loc <- air_store$air_genre_name
loc[i]
}
loc <- c()
for(i in 1:14){
loc <- air_store$air_genre_name
loc[i]
}
loc
air_store %>%
select(1)
air_store %>%
dplyr::select(1)
air_store %>%
filter(air_area_name==loc[i])
names(air_store)
library(dplyr)
loc
air_store %>%
filter(air_area_name==loc[1])
loc[1]
air_store %>%
dplyr::filter(air_area_name==loc[1])
air_store %>%
dplyr::filter(air_area_name==loc[1])
air_store %>%
dplyr::filter(air_area_name=="Italian/French")
air_store %>%
dplyr::filter(air_area_name=="Italian/French")
head(air_store)
air_store %>%
dplyr::filter(air_genre_name==loc[1])
for(i in 1:14){
loc <- air_store$air_genre_name
ggplot(air_store%>%dplyr::filter(air_genre_name==loc[i]),aes(x=air_genre_name)) +
geom_bar()+
coord_flip()
}
ggplot(air_store%>%dplyr::filter(air_genre_name==loc[i]),aes(x=air_genre_name)) +
geom_bar()+
coord_flip()
ggplot(air_store%>%dplyr::filter(air_genre_name==loc[i]),aes(x=air_genre_name)) +
geom_bar()+
coord_flip()
ggplot(air_store%>%dplyr::filter(air_genre_name==loc[1]),aes(x=air_genre_name)) +
geom_bar()+
coord_flip()
ggplot(air_store%>%dplyr::filter(air_genre_name==loc[1]),aes(x=air_genre_name)) +
geom_bar()+
coord_flip()
loc <- air_store$air_area_name
ggplot(air_store%>%dplyr::filter(air_area_name==loc[1]),aes(x=air_genre_name)) +
geom_bar()+
coord_flip()
for(i in 1:14){
loc <- air_store$air_area_name
ggplot(air_store%>%dplyr::filter(air_area_name==loc[i]),aes(x=air_genre_name)) +
geom_bar()+
coord_flip()
}
names(air_store)
library(ggplot2)
#by genre, by area plot
loc <- c()
for(i in 1:14){
loc <- air_store$air_area_name
ggplot(air_store%>%dplyr::filter(air_area_name==loc[i]),aes(x=air_genre_name)) +
geom_bar()+
coord_flip()
}
knitr::opts_chunk$set(echo = TRUE)
library(missMDA)
library(readxl)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(corrplot)
library(missMDA)
library(FactoMineR)
diecasting <- read_excel("diecasting.xlsx")
str(diecasting)
View(diecasting)
head(diecasting)
dim(diecasting)
names(diecasting)
summary(diecasting)
boxplot(diecasting$`EXW cost`)$out
dfout <- diecasting %>% filter(`EXW cost` %in% boxplot(diecasting$`EXW cost`)$out)
dfout
unique(diecasting$`nb Threading`)
dfout
estim_ncpFAMD(diecasting, ncp.min=0, ncp.max=5, method = c("Regularized","EM"),
method.cv = c("Kfold"), nbsim=100, pNA=0.05)
famd_ncp <- estim_ncpFAMD(diecasting, ncp.min=0, ncp.max=5)
dim(diecasting)
dim(ozone)
data(ozone)
dim(ozone)
famd_ncp <- estim_ncpFAMD(ozone, ncp.min=0, ncp.max=5)
famd_ncp
res.famd <- FAMD(diecasting)
summary(res.famd)
kmeans(res.famd)
#you want between/total intertia to be high, that would mean that the in group variance is low and the points differ a lot between groups
for(i in 1:20) {
kmeans(res.famd, centers=i)
}
kmeans(res.famd, centers=2)
kmeans(res.famd, centers=2)
coords <- res.famd$ind$coord
kmeans(coords, centers=2)
#you want between/total intertia to be high, that would mean that the in group variance is low and the points differ a lot between groups
for(i in 1:20) {
kmeans(res.famd, centers=i)
}
#you want between/total intertia to be high, that would mean that the in group variance is low and the points differ a lot between groups
for(i in 1:20) {
kmeans(coords, centers=i)
}
kmeans(coords, centers=2)
kmeans(coords, centers=2)$betweenss/kmeans(coords, centers=2)$totss
kmeans(coords, centers=2)
kmeans(coords, centers=2)$betweenss
kmeans(coords, centers=2)$totss
kmeans(coords, centers=2)
kmeans(coords, centers=2)
kmeans(coords, centers=2)
kmeans(coords, centers=2)$betweenss/kmeans(coords, centers=2)$totss
ratio_evol <- c()
for(i in 1:20) {
kmeans_answ <- kmeans(coords, centers=i)
ratio_evol <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
for(i in 1:20) {
kmeans_answ <- kmeans(coords, centers=i)
ratio_evol <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
ratio_evol <- c()
for(i in 1:20) {
kmeans_answ <- kmeans(coords, centers=i)
ratio_evol <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
ratio_evol <- c()
for(i in 1:20) {
kmeans_answ <- kmeans(coords, centers=i)
ratio_evol <- kmeans_answ$betweenss/kmeans_answ$totss
}
for(i in 1:20) {
kmeans_answ <- kmeans(coords, centers=i)
return(kmeans_answ$betweenss/kmeans_answ$totss)
}
ratio_evol
a <- 1:20
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i)
rato_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
a <- 1:20
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
kmeans(coords, centers=2)$betweenss/kmeans(coords, centers=2)$totss
ratio_evol
which.min(ratio_evol)
a <- 2:20
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
a <- 3:20
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
a <- 2:20
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
a <- 2:20
ratio_evol <- numeric(length = length(a))
a <- 1:20
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
rm(a,ratio_evol)
a <- 1:20
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
a <- 1:20
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i+1)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
##so index 1 has centers=2
which.max(ratio_evol)
ratio_evol
a <- 1:100
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i+1)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
##so index 1 has centers=2
which.max(ratio_evol)
rm(ratio_evol)
a <- 1:20
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i+1)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
##so index 1 has centers=2
which.max(ratio_evol)
res.famd <- FAMD(diecasting%>%dplyr::select(-ID,-idPhoto,-Data))
res.famd <- FAMD(diecasting%>%dplyr::select(-ID,-idPhoto,-Date))
res.famd <- FAMD(diecasting%>%dplyr::select(-ID,-idPhoto,-Date))
summary(res.famd)
coords <- res.famd$ind$coord
rm(ratio_evol)
coords <- res.famd$ind$coord
a <- 1:30
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i+1)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
##so index 1 has centers=2
# as soon as hits 0.85 select that number
which(ratio_evol>0.85)
ratio_evol
##so index 1 has centers=2
# as soon as hits 0.85 select that number
which(ratio_evol>0.85)
catdes(kmeans(coords,centers=22))
catdes(as.data.frame(kmeans(coords,centers=22)))
names(diecasting)
clusters <- kmeans(coords, centers = 22)$cluster
clusters <- clusters %>% mutate(cluster = as.character(clusters))
clusters <- kmeans(coords, centers = 22)$cluster
clusters <- diecasting %>% mutate(cluster = as.character(clusters))
names(clusters)
# HOW>>>
# famd_ncp <- estim_ncpFAMD(diecasting, ncp.min=0, ncp.max=5)
# dim(diecasting)
# data(ozone)
# dim(ozone)
# famd_ncp <- estim_ncpFAMD(ozone, ncp.min=0, ncp.max=5)
# famd_ncp
unique(diecasting$idPhoto)
res.famd <- FAMD(diecasting%>%dplyr::select(-ID,-Date))
coords <- res.famd$ind$coord
a <- 1:30
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i+1)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
##so index 1 has centers=2
# as soon as hits 0.85 select that number
which(ratio_evol>0.85)
coords <- res.famd$ind$coord
a <- 1:30
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i+1)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
##so index 1 has centers=2
# as soon as hits 0.85 select that number
which(ratio_evol>0.85)
temp2 <- kmeans(coords, centers = 26)$cluster
df2 <- df %>% mutate(cluster = as.character(temp2))
clusters <- kmeans(coords, centers = 26)$cluster
clusters <- diecasting %>% mutate(cluster = as.character(clusters))
names(clusters)
descr_clust <- catdes(diecasting %>% dplyr::select(-ID,-idPhoto,-Date), 17)
names(diecasting)
descr_clust <- catdes(clusters %>% dplyr::select(-ID,-idPhoto,-Date), 17)
descr_clust
descr_clust
clusters <- kmeans(coords, centers = 26)$cluster
clusters <- diecasting %>% mutate(cluster = as.character(clusters))
names(diecasting)
descr_clust <- catdes(clusters %>% dplyr::select(-ID,-idPhoto,-Date), 17)
descr_clust
descr_clust
res.famd <- FAMD(diecasting%>%dplyr::select(-ID,-Date),ncp=Inf)
coords <- res.famd$ind$coord
a <- 1:50
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i+1)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
##so index 1 has centers=2
# as soon as hits 0.85 select that number
which(ratio_evol>0.85)
res.famd <- FAMD(diecasting%>%dplyr::select(-ID,-Date),ncp=Inf)
coords <- res.famd$ind$coord
a <- 1:90
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i+1)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
##so index 1 has centers=2
# as soon as hits 0.85 select that number
which(ratio_evol>0.80)
summary(res.famd)
#We take ncp = 37 to capture more than 80% of the inertia
res.famd <- FAMD(diecasting%>%dplyr::select(-ID,-Date),ncp=37)
coords <- res.famd$ind$coord
a <- 1:90
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i+1)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
##so index 1 has centers=2
# as soon as hits 0.85 select that number
which(ratio_evol>0.80)
#We take ncp = 37 to capture more than 80% of the inertia
res.famd <- FAMD(diecasting%>%dplyr::select(-ID,-Date),ncp=37)
#We take ncp = 37 to capture more than 80% of the inertia
res.famd <- FAMD(diecasting%>%dplyr::select(-ID,-Date),ncp=37)
coords <- res.famd$ind$coord
a <- 1:90
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i+1)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
##so index 1 has centers=2
# as soon as hits 0.85 select that number
which(ratio_evol>0.80)
p1 <- ggplot(diecasting,aes(x=`Net Weight (kg)`,y=`EXW cost`))+
geom_smooth() +
geom_point() +
theme_minimal()
p2 <- ggplot(diecasting,aes(x=`Yearly Volume`,y=`EXW cost`))+
geom_smooth() +
geom_point()
grid.arrange(p1,p2, ncol=2)
p1 <- ggplot(diecasting,aes(x=`Net Weight (kg)`,y=`EXW cost`))+
geom_smooth() +
geom_point() +
theme_minimal() +
ggtitle("Relationship between EXW cost and Net Weight")
p2 <- ggplot(diecasting,aes(x=`Yearly Volume`,y=`EXW cost`))+
geom_smooth() +
geom_point() +
theme_minimal() +
ggtitle("Relationship between EXW cost and Yearly Volume")
grid.arrange(p1,p2, ncol=2)
quantile(sort(cor),0.5)
cor <- c()
for(i in 1:100){
x <- rnorm(25,0,1)
y <- rnorm(25,0,1)
cor[i] <- cor(x,y)
}
quantile(sort(cor),0.5)
quantile(sort(cor),0.95)
diecasting %>%
group_by(Supplier) %>%
summarise(mean=mean(`EXW cost`),
median=median(`EXW cost`))
cheap <- diecasting %>%
group_by(Supplier) %>%
summarise(mean=mean(`EXW cost`),
median=median(`EXW cost`))
cheap %>% arrange(mean)
res.famd_try <- FAMD(diecasting%>%dplyr::select(-ID,-Date),ncp=Inf)
summary(res.famd_try)
#We take ncp = 37 to capture more than 80% of the inertia
res.famd <- FAMD(diecasting%>%dplyr::select(-ID,-Date),ncp=37)
coords <- res.famd$ind$coord
rm(a,ratio_evol)
a <- 1:90
ratio_evol <- numeric(length = length(a))
for(i in seq_along(a)) {
kmeans_answ <- kmeans(coords, centers=i+1)
ratio_evol[i] <- kmeans_answ$betweenss/kmeans_answ$totss
}
ratio_evol
qqplot(diecasting$`EXW cost`)
qqplot(diecasting)
estim_ncpFAMD(diecasting %>% dplyr::select(-ID), ncp.min=0, ncp.max=40, method = c("Regularized","EM"),
method.cv = "Kfold", nbsim=40,verbose=F)
summary(res.famd_try)
ggplot(diecasting, aes(x=`EXW cost`)) +
geom_density()
ggplot(diecasting, aes(y=`EXW cost`)) +
geom_boxplot()
