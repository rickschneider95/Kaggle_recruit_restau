ggplot()+
geom_histogram(aes_string(x ="total"))
}
general_overview(df,visit_time)
glimpse(df)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot()+
geom_histogram(aes_string(x =str_time))
}
general_overview(df,holiday_flg_visit)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot()+
geom_point(aes_string(x =str_time, y = "total"))
}
general_overview(df,visit_time)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot()+
geom_point(aes_string(x =str_time, y = "total"))+
geom_line(aes_string(x =str_time, y = "total"))
}
general_overview(df,visit_time)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot()+
geom_bar(aes_string(x =str_time, y = "total"))+
}
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot()+
geom_bar(aes_string(x =str_time, y = "total"))
}
general_overview(df,visit_time)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot()+
geom_bar(aes_string(x =str_time, y = "total"),stat='identity')
}
general_overview(df,visit_time)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot()+
geom_bar(aes_string(x =str_time, y = "total"),stat='identity')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
}
general_overview(df,visit_time)
library(RColorBrewer)
library(RColorBrewer)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot()+
geom_bar(aes_string(x =str_time, y = "total",fill='blue'),stat='identity')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
}
general_overview(df,visit_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot()+
geom_bar(aes_string(x =str_time, y = "total",colour=cond),stat='identity')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
library(RColorBrewer)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot()+
geom_bar(aes_string(x =str_time, y = "total",colour=cond),stat='identity')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
}
general_overview(df,visit_time)
library(RColorBrewer)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot()+
geom_bar(aes_string(x =str_time, y = "total"),stat='identity')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+
scale_colour_hue()
}
general_overview(df,visit_time)
library(RColorBrewer)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot(aes_string(x =str_time, y = "total"))+
geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+
scale_colour_hue()
}
library(RColorBrewer)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot(aes_string(x =str_time, y = "total"))+
geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+
scale_colour_hue()
}
general_overview(df,visit_time)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot(aes_string(x =str_time, y = "total"))+
geom_bar(aes(fill=cond),stat='identity')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+
scale_colour_hue()
}
general_overview(df,visit_time)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot(aes_string(x =str_time, y = "total"))+
geom_bar(aes(fill=cond),stat='identity')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+
}
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot(aes_string(x =str_time, y = "total"))+
geom_bar(aes(fill=cond),stat='identity')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
}
general_overview(df,visit_time)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot(aes_string(x =str_time, y = "total"))+
geom_bar(aes(fill='blue'),stat='identity')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
}
general_overview(df,visit_time)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot(aes_string(x =str_time, y = "total",fill=str_time))+
geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
}
general_overview(df,visit_time)
library(RColorBrewer)
general_overview <- function(df,time){
quo_time <- enquo(time)
str_time <- quo_name(quo_time)
df %>%
filter(!is.na(!!quo_time)) %>%
filter(!is.na(visitors)) %>%
group_by(!!quo_time) %>%
summarise(total=sum(visitors)) %>%
ggplot(aes_string(x =str_time, y = "total",fill=str_time))+
geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5),legend.position = "none")
}
general_overview(df,visit_time)
general_overview(df,visit_data)
general_overview(df,visit_date)
general_overview(df,day_of_the_week_visit)
ui <- fluidPage(
mainPanel(
tabsetPanel(type='tabs',
tabPanel("TEST 1",sidebarPanel("TITLE",
#selectInput("name","CHOICES ARE",choices=unique(prenoms$name),selected="Mathieu"),
#selectInput("color","Choose your favorite color bitch",choices=colors(),selected = "blue"),
#sliderInput( "year_period", "THE SLIDE YEAR SHOW", min = 1900, max = 2017, value =c(1900,2017), step = 1) ,
radioButtons("time", "WHICH TIME ARE U ON ?", choices=c("by day in the year"="visit_date",
"by day in the week"="day_of_the_week_visit",
"by hour"="visit_time",
"by holidays"="holiday_flg_visit"))#,
#actionButton("refresh",label = "Refresh")
),
mainPanel(
plotOutput("plot_time")#,
#textOutput("Total"),
# DT::DTOutput("Table")
)
),
tabPanel("TEST 2",sidebarPanel("TITLE",
selectInput("color","Choose your favorite color bitch",choices=colors(),selected = "blue")
)
)
)
)
)
library(shiny)
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
install.packages('shinyTime')
library(shinyTime)
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
df$visit_time =  as.POSIXct(df$visit_time, format = "%H:%M:%OS")
glimpse(df$visit_time)
df <- read.csv("data/complete_data.csv",encoding="UTF-8")
df$visit_time =format(as.POSIXct(df$visit_time) ,format = "%H:%M:OS")
x <- c("19:00", "14:00")
z <- strptime(x, "%T")
glimpse(z)
View(z)
View(z)
x <- c("19:00:00", "14:00:00")
z <- strptime(x, "%T")
glimpse(z)
df$visit_time =  format(as.POSIXct(df$visit_time) ,format = "%H:%M:%S"))
df$visit_time =  format(as.POSIXct(df$visit_time) ,format = "%H:%M:%S")
library(shiny); runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
df <- read.csv("data/complete_data.csv",encoding="UTF-8")
df %>% mutate(visit_time=as.character(visit_time,count=substr(visit_time, start = 1, stop = 2)))
df %>% mutate(visit_time=as.character(visit_time)) %>% mutate( count=substr(visit_time, start = 1, stop = 2))
df %>% mutate(visit_time=as.character(visit_time)) %>% mutate( count=substr(visit_time, start = 1, stop =3))
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
df %>% mutate(visit_time=as.character(visit_time)) %>%
mutate( count=substr(visit_time, start = 1, stop = 3)) %>%
mutate(count=as.numeric(count)) %>%
filter(count >= 4 & count <= 21) %>%
mutate(visit_time=as.factor(visit_time)) %>%
select(-count)
df %>% mutate(visit_time=as.character(visit_time)) %>%
mutate( count=substr(visit_time, start = 1, stop = 3)) %>%
mutate(count=as.numeric(count))
df %>% mutate(visit_time=as.character(visit_time)) %>%
mutate( count=substr(visit_time, start = 1, stop = 3)) %>%
mutate(count=as.numeric(count)) %>%
filter(count >= 4 & count <= 21)
df %>% mutate(visit_time=as.character(visit_time)) %>%
mutate( count=substr(visit_time, start = 1, stop = 3)) %>%
mutate(count=as.numeric(count)) %>%
filter(count == 4)
df %>% mutate(visit_time=as.character(visit_time)) %>%
mutate( count=substr(visit_time, start = 1, stop = 3)) %>%
mutate(count=as.numeric(count)) %>%
filter(count =< 4)
df %>% mutate(visit_time=as.character(visit_time)) %>%
mutate( count=substr(visit_time, start = 1, stop = 3)) %>%
mutate(count=as.numeric(count)) %>%
filter(count <= 4)
df %>% mutate(visit_time=as.character(visit_time)) %>%
mutate( count=substr(visit_time, start = 1, stop = 3)) %>%
mutate(count=as.numeric(count)) %>%
filter(count <= 4 & count >= 17)
df %>% mutate(visit_time=as.character(visit_time)) %>%
mutate( count=substr(visit_time, start = 1, stop = 3)) %>%
mutate(count=as.numeric(count)) %>%
filter(count <= 4 & count >= 17)
df %>% mutate(visit_time=as.character(visit_time)) %>%
mutate( count=substr(visit_time, start = 1, stop = 3)) %>%
mutate(count=as.numeric(count)) %>%
filter(count >= 4 & count <= 17)
df %>% mutate(visit_time=as.character(visit_time)) %>%
mutate( count=substr(visit_time, start = 1, stop = 3)) %>%
mutate(count=as.numeric(count)) %>%
filter(count >= 4 & count <= 17) %>%
mutate(visit_time=as.factor(visit_time))
df %>% mutate(visit_time=as.character(visit_time)) %>%
mutate( count=substr(visit_time, start = 1, stop = 3)) %>%
mutate(count=as.numeric(count)) %>%
filter(count >= 4 & count <= 17) %>%
mutate(visit_time=as.factor(visit_time)) %>%
select(-count)
library(RColorBrewer)
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(naniar)
library(VIM)
library('geosphere') # geospatial locations
library('leaflet') # maps
library('leaflet.extras') # maps
library('maps') # maps
hpg_store <- read_csv("data/hpg_store_info.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(naniar)
library(VIM)
library('geosphere') # geospatial locations
library('leaflet') # maps
library('leaflet.extras') # maps
library('maps') # maps
hpg_store <- read_csv("data/hpg_store_info.csv")
hpg_store
levels(as.factor(hpg_store$hpg_genre_name))
hpg_reserve <- read.csv("data/hpg_reserve.csv")
hpg_reserve %>%
select(hpg_store_id,reserve_visitors) # I'm only intersted in these two, so it will be easier to work with a smaller data set.
hpg_reserve %>% distinct(hpg_store_id) %>% summarise(count = n())
hpg_reserve <- hpg_reserve %>%
group_by(hpg_store_id) %>%
summarise(total = n())
hpg <- left_join(hpg_reserve,hpg_store, by = "hpg_store_id")
summary(aggr(hpg, sortVar=TRUE))$combinations
hpg <- hpg %>% filter(hpg_genre_name != "NA")
sum(is.na(hpg)) # Just to check...
visitors_per_style <- hpg %>%
group_by(hpg_genre_name) %>%
summarise(total = n()) %>%
arrange(total)
levels(as.factor(hpg$hpg_genre_name))
sum(hpg %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) == 0)
hpg %>%
group_by(hpg_genre_name, hpg_area_name) %>%
summarise(total = n()) %>%
arrange(total) %>%
head()
visitors_per_style %>%
ggplot() +
aes(x = reorder(hpg_genre_name, total, FUN = min), y = total, fill = hpg_genre_name) +
geom_col() +
coord_flip() +
theme(title=element_blank(),
axis.title.y=element_blank(),
legend.position = "none")
levels(as.factor(hpg$hpg_area_name)) # There are 119 different area names in Japan considered in our dataset
hpg %>%
arrange(desc(total)) %>%
ggplot() +
aes(x = hpg_area_name, y = total, fill = hpg_genre_name) +
geom_col() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
hpg %>%
mutate(hpg_area_name = str_sub(hpg_area_name, 1, 20)) %>%
group_by(hpg_area_name) %>%
summarise(total = n()) %>%
ungroup() %>%
top_n(20,total) %>%
ggplot(aes(reorder(hpg_area_name, total, FUN = min), total, fill = hpg_area_name)) +
geom_col() +
coord_flip() +
labs(title = "Top 20 areas w/ most restaurants", x = "Areas", y = "Number of restaurants")
levels(as.factor(hpg_store_info$hpg_area_name)) # These are all the different areas in our data, although I'll group them according to the major city they are attached to.
leaflet(hpg) %>%
addTiles() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~longitude, ~latitude,
popup = ~hpg_store_id, label = ~hpg_genre_name,
clusterOptions = markerClusterOptions())
View(hpg)
View(hpg)
library(leaflet)
library(leaflet)
library(leaflet)
leaflet(hpg) %>%
addTiles() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~longitude, ~latitude,
popup = ~id, label = ~genre_name,
clusterOptions = markerClusterOptions())
leaflet(df) %>%
addTiles() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~longitude, ~latitude,
popup = ~id, label = ~genre_name,
clusterOptions = markerClusterOptions())
library(leaflet)
leaflet(df %>% unique(id)) %>%
addTiles() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~longitude, ~latitude,
popup = ~id, label = ~genre_name,
clusterOptions = markerClusterOptions())
df %>% unique(id)
df %>% distinct(id)
leaflet(df) %>%
addTiles() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~longitude, ~latitude,
popup = ~id, label = ~genre_name,
clusterOptions = markerClusterOptions())
df %>% distinct(id,keep_all=TRUE)
df %>% distinct(id,keep_all = TRUE)
df %>% distinct(id, .keep_all = TRUE)
leaflet(df %>% distinct(id, .keep_all = TRUE)) %>%
addTiles() %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(~longitude, ~latitude,
popup = ~id, label = ~genre_name,
clusterOptions = markerClusterOptions())
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
runApp('~/GitHub/Kaggle_recruit_restau/shiny_app/template_app1.R')
